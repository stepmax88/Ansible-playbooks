---
- name: Power off ESXi hosts
  hosts: localhost
  connection: local
  vars:
    vault_url: <url>
    vault_token: "<TOKEN>"
    vault_secret: <path_secret>
    esxi_arr: "{{ lookup('hashi_vault', 'secret={{ vault_secret }} token={{ vault_token }} url={{ vault_url }} validate_certs=False') }}"
    datacenter_name: "<NAME>"
    esxi_ip:
        - "<IP>"
        - "<IP>"
    telegram:
         token:   "<token>"
         chat_id: "<id>"

  tasks:

  - name: Set the state of a host system to power down to standby
    vmware_host_powerstate:
      hostname: "{{ esxi_arr.<value_vault_hostname> }}"
      username: "{{ esxi_arr.<value_vault_username> }}"
      password: "{{ esxi_arr.<value_vault_password> }}"
      validate_certs: no
      esxi_hostname: "{{ item }}"
      state: shutdown-host
      force: true
    loop: "{{ esxi_ip }}"
    delegate_to: localhost

  - name: Send notify to Telegram - - Start shutdown
    community.general.telegram:
      token: '{{ telegram.token }}'
      api_args:
        chat_id: "{{ telegram.chat_id }}"
        parse_mode: "markdown"
        text: "Send power down {{ datacenter_name }}"
        disable_web_page_preview: true
        disable_notification: true

  - name: Gather information about powerstate and connection state
    community.vmware.vmware_host_facts:
      validate_certs: no
      hostname: "{{ esxi_arr.<value_vault_hostname> }}"
      username: "{{ esxi_arr.<value_vault_username> }}"
      password: "{{ esxi_arr.<value_vault_password> }}"
      esxi_hostname: "{{ item }}"
      schema: vsphere
      properties:
      - runtime.powerState
    loop: "{{ esxi_ip }}"
    delegate_to: localhost
    register: power_state

  - name: Send notify to Telegram - Checking the status of ESXi hosts
    community.general.telegram:
      token: '{{ telegram.token }}'
      api_args:
        chat_id: "{{ telegram.chat_id }}"
        parse_mode: "markdown"
        text: "ESXI hosts {{ item.invocation.module_args.esxi_hostname }} status {{ item.ansible_facts.runtime.powerState }}"
        disable_web_page_preview: true
        disable_notification: true
    loop: "{{ power_state.results }}"